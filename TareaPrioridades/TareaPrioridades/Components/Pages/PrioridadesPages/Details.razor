@page "/DetallePrioridad";
@page "/DetallePrioridad/{PrioridadId:int}";
@rendermode InteractiveServer
@inject PrioridadesService prioridadesService;

<PageTitle>Detalle Cliente</PageTitle>

<div class="card shadow col-8">
    <div class="card-header bg-dark">
        <h1 class="text-light">Detalles De Prioridad</h1>
    </div>
    <div class="card-header bg-secondary">
        <h4 class="text-white fw-bold">Detalles...</h4>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <p><strong class="text-primary bi bi-key">-ID:</strong> @prioridades.PrioridadId</p>
                <p><strong class="text-primary bi bi-card-text">-Descripci&oacute;n:</strong> @prioridades.Descripcion</p>
                <p><strong class="text-primary bi bi-calendar2-day">-Dias Compromiso: </strong> @prioridades.DiasCompromiso</p>
            </div>
        </div>
    </div>
    <div class="card-footer d-flex justify-content-end">
        <a href="/IndexPrioridades" class="btn btn-primary bi bi-house-door-fill mt-1 ms-auto">Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int PrioridadId { get; set; }
    public Prioridades prioridades = new Prioridades();

    protected override async Task OnInitializedAsync()
    {
        if (PrioridadId > 0)
        {
            prioridades.PrioridadId = PrioridadId;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var prioridadEncontrada = await prioridadesService.Buscar(prioridades.PrioridadId);
        if (prioridadEncontrada != null)
        {
            prioridades = prioridadEncontrada;
        }
        else
        {
            prioridades = new Prioridades();
        }
    }
 }
