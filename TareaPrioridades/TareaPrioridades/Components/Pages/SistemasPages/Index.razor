@page "/IndexSistemas"
@rendermode InteractiveServer
@inject SistemasService sistemasService;

<PageTitle>Sistemas Home</PageTitle>

<div class="card bg-dark shadow">
    <div class="card-header bg-dark d-flex align-items-center justify-content-center">
        <h1 class="text-light fw-bold">Sistemas</h1>
    </div>
    <div class="card-body bg-dark">
        <div class="row filter-input ">
            <label class="text-light fw-bold">Buscar por:</label>
            <div class="col col-2">
                <InputSelect @bind-Value="Opcion" class="form-select">
                    <option value="1">Id</option>
                    <option value="2">Nombre</option>
                </InputSelect>
            </div>
            @if (Opcion <= 0)
            {
                <div class="col-auto">
                    <a href="/RSistemas" class="btn btn-success bi bi-file-earmark-diff-fill">Crear</a>
                </div>
            }
            <div class="col-auto">
                @switch (Opcion)
                {
                    case 1:
                        <div class="input-group">
                            <InputNumber @bind-Value="sistemas.SistemaId" class="form-control" min="0"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"></button>
                        </div>
                        break;
                    case 2:
                        <div class="input-group">
                            <InputText @bind-Value="sistemas.NombreSistema" class="form-control"></InputText>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar"></button>
                        </div>
                        break;
                }

            </div>
            @if (Opcion > 0)
            {
                <div class="col-auto">
                    <a href="/RSistemas" class="btn btn-success bi bi-file-earmark-diff-fill">Crear</a>
                </div>
            }
            <div class="col d-flex justify-content-end">
                <a href="/IndexTickets" class="btn btn-primary bi bi-ticket-fill"> Tickets</a>
            </div>
        </div>
    </div>
    <div>
        <table class="table table-light table-hover table-striped table-bordered ">
            <thead class="table-dark">
                <tr>
                    <th scope="col" class="text-center">Nombre</th>
                    <th scope="col" class="text-center">Descripci&oacute;n</th>
                    <th scope="col" class="text-center">Editar</th>
                    <th scope="col" class="text-center">Detalles</th>
                    <th scope="col" class="text-center">Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListaSistemas)
                {
                    <tr>
                        <td class="text-center">@item.NombreSistema</td>
                        <td class="text-center">@item.DescripcionSistema</td>
                        <td class="text-center">
                            <a href="EditSistema/@item.SistemaId" class="btn btn-primary bi bi-pencil-square"></a>
                        </td>
                        <td class="text-center">
                            <a href="DetalleSistema/@item.SistemaId" class="btn btn-info bi bi-card-text"></a>
                        </td>
                        <td class="text-center">
                            <a href="EliminarSistema/@item.SistemaId" class="btn btn-danger bi bi-trash-fill"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="card-header text-white">
            <p>Cantidad de Sistemas: @ListaSistemas.Count</p>
        </div>
    </div>
</div>
@code {

    public List<Sistemas> ListaSistemas = new List<Sistemas>();
    public Sistemas sistemas = new Sistemas();
    public int Opcion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaSistemas = await sistemasService.Listar(s => true);
    }
    public async Task Buscar()
    {
        if (Opcion == 1 && sistemas.SistemaId > 0)
            ListaSistemas = await sistemasService.Listar(s => s.SistemaId == sistemas.SistemaId);

        else if (Opcion == 2 && !string.IsNullOrEmpty(sistemas.NombreSistema))
            ListaSistemas = await sistemasService.Listar(s => s.NombreSistema!.ToLower().Contains(sistemas.NombreSistema.ToLower()));
        else
            ListaSistemas = await sistemasService.Listar(s => true);
    }
}