@page "/DCliente";
@page "/DCliente/{ClienteId:int}";
@rendermode InteractiveServer
@inject ClientesService clientesService;

<PageTitle>Detalle Cliente</PageTitle>

<div class="card shadow col-8">
    <div class="card-header bg-dark">
        <h1 class="text-light">Detalles Del Cliente</h1>
    </div>
    <div class="card-header bg-secondary">
        <h4 class="text-white fw-bold">Detalles...</h4>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <p><strong class="text-primary bi bi-key">-ID:</strong> @clientes.ClienteId</p>
                <p><strong class="text-primary bi bi-person">-Nombres: </strong> @clientes.Nombre</p>
                <p><strong class="text-primary bi bi-phone">-Tel&eacute;fono: </strong> @clientes.Telefono</p>
                <p><strong class="text-primary bi bi-phone">-Celular: </strong> @clientes.Celular</p>
                <p><strong class="text-primary bi bi-card-heading">-RNC: </strong> @clientes.RNC</p>
                <p><strong class="text-primary bi bi-envelope">-Email: </strong> @clientes.Email</p>
                <p><strong class="text-primary bi bi-card-text">-Direcci&oacute;n: </strong> @clientes.Direccion</p>
            </div>
        </div>
    </div>
    <div class="card-footer d-flex justify-content-end">
        <a href="/IndexTickets" class="btn btn-primary bi bi-house-door-fill mt-1 ms-auto">Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes clientes { get; set; } = new Clientes();

    protected override async Task OnInitializedAsync()
    {
        if (ClienteId > 0)
        {
            clientes.ClienteId = ClienteId;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        var clienteEncontrado = await clientesService.Buscar(clientes.ClienteId);
        if (clienteEncontrado != null)
        {
            clientes = clienteEncontrado;
        }
        else
        {
            clientes = new Clientes();
        }
    }
}
