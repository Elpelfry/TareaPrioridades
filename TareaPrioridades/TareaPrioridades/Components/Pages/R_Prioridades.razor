@page "/RPrioridades";
@page "/RPrioridades/{PrioridadId:int}";
@rendermode InteractiveServer
@inject PrioridadesBLL prioridadesBLL;

<EditForm Model="prioridades" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class=" card">
        <div class="card-header">
            <h1>Registro de Prioridades</h1>
        </div>
        <div class="card-body">
            <label>PrioridadId</label>
            <div >
                <InputNumber @bind-Value="prioridades.PrioridadId" @oninput="MensajeGuardar"></InputNumber>
                <button type="button" class="btn btn-primary bi bi-search" @onclick="Buscar" ></button>
                @if (_existeid)@*Si _existeid es verdadero muestra el mensaje*@
                {
                    <p class="text-danger">No se encontr&oacute; la prioridad</p>
                }
            </div>
            <div >
                <label>Descripci&oacute;n</label>
                <InputText @bind-Value="prioridades.Descripcion" @oninput="MensajeGuardar" class="form-control"></InputText>
                <ValidationMessage For="@(() => prioridades.Descripcion)"/>
                @if (_existe)@*Si _existe es verdadero muestra alerta al guardar*@
                {
                    <p class="text-danger">Descripci&oacute;n ya se encuentra registrada</p>
                }
            </div>
            <div>
                <label>Dias Compromiso</label><br />
                <InputNumber @bind-Value="prioridades.DiasCompromiso" @oninput="MensajeGuardar"></InputNumber>
                <ValidationMessage For="@(() => prioridades.DiasCompromiso)"/>
            </div>
        </div>
        <div class="card-footer">
            <button type="button" class="btn btn-primary" @onclick="Nuevo" @oninput="MensajeGuardar">Nuevo<i class=" bi bi-file-earmark-diff-fill" /></button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar<i class="bi bi-trash-fill " /></button>
            <button type="submit" class="btn btn-success">Guardar<i class="bi bi-floppy-fill" /></button> 
            @if(_guardar)@*Muestro la alerta de que se guardó correctamente*@
            {
                <br />
                <p class="text-success">Prioridad guardada</p>
            }
        </div>
    </div>
</EditForm>


@code {

    [Parameter]
    public int PrioridadId { get; set; }
    public Prioridades prioridades = new Prioridades();
    private bool _existe = false;
    private bool _existeid = false;  
    private bool _guardar = false;

    protected override async Task OnInitializedAsync()
    {
        if (PrioridadId > 0)
        {
            prioridades.PrioridadId = PrioridadId;
            await Buscar();
        }
    }

    public async Task Buscar()
    {
        _existe = false;
        MensajeGuardar();
        var prioridadEncontrada = await prioridadesBLL.Buscar(prioridades.PrioridadId);
        if (prioridadEncontrada != null)
        {
            this.prioridades = prioridadEncontrada;
            _existeid = false;
        }
        else 
        {
            this.prioridades = new Prioridades();
            _existeid = true;
        }
    }

    public void Nuevo()
    {
        this.prioridades = new Prioridades();
        _existe = false;
        _existeid = false;
    }

    public async Task Guardar()
    {

        var guardo = await prioridadesBLL.Guardar(this.prioridades);
        if(!guardo)
        {
            _existe = true;
        }
        else
        {
           _guardar = true;
            Nuevo();
        }
    }

    public async Task Eliminar()
    {
        if (await prioridadesBLL.Existe(prioridades.PrioridadId))
        {
            await prioridadesBLL.Eliminar(this.prioridades);
            this.Nuevo();
        }
        else
        {
            MensajeGuardar();
        }
    }

    public void MensajeGuardar()
    {
        _guardar = false;
        _existeid = false;
    }
}
